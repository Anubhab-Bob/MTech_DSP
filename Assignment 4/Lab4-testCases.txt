Test Cases For Infix to PostFix Expression Program :

case=1
input=a + b * c + ( d * e + f ) * 10
output="a b c * + d e * f + 10 * + "
case=2
input=a + b - ( c * ( ( d / e ) % f ) )
output="a b + c d e / f % * - "
case=3
input=a + 200 * c / 30 + d - 5000
output="a 200 c * 30 / + d + 5000 - "
case=4
input=a + b - ( ( c + d * e ) / f ) + g
output="a b + c d e * + f / - g + "
case=5
input=10 + 20 + a * b + ( 100 / 10 ) - ( x - y )
output="10 20 + a b * + 100 10 / + x y - - "
case=6
input=a + b - c * d / e % f 
output="a b + c d * e / f % - "
case=7
input=a % b / c * d - e + f
output="a b % c / d * e - f + "
case=8
input=a + 77 - c + 37 - e
output="a 77 + c - 37 + e - "
case=9
input=a * 100 / c % 10 / e * 1
output="a 100 * c / 10 % e / 1 * "
case=10
input=( x / y + z / w ) - ( a * b + c % d )
output="x y / z w / + a b * c d % + - "
case=11
input=a / ( b - c + d ) * ( e - a ) * c
output="a b c - d + / e a - * c * "

----------------------------------------------------------------


Test Cases for Sparse Matrix Addition :

case=1
input=3 3 2 3 1 1 10 2 0 1 0 0 -1 1 0 11 2 2 20
output=-1 0 0 11 10 0 1 0 20
case=2
input=4 4 5 0 0 1 -1 1 1 1 2 0 1 2 3 1 3 2 1 
output=0 -1 0 0 0 1 0 0 1 0 0 1 0 0 1 0
case=3
input=3 3 0 3 0 2 2 1 0 3 2 1 15
output=0 0 2 3 0 0 0 15 0
case=4
input=2 2 1 1 2 2 2 1 1 1
output=INVALID INPUT
case=5
input=2 2 4 1 0 0 1 0 1 2 1 0 3 1 1 4 1 2 3
output=INVALID INPUT
case=6
input=3 2 2 2 0 0 1 0 1 -6 0 1 -4 2 1 6
output=1 -10 0 0 0 6
case=7
input=3 0 1 1 0 0 1 0 0 1
output=INVALID INPUT
case=8
input=0 3 1 1 0 0 1 0 0 1
output=INVALID INPUT
case=9
input=5 5 1 1 0 0 1 4 4 1
output=1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
case=10
input=7 1 2 2 1 0 -70 2 0 -30 1 0 70 2 0 30
output=0 0 0 0 0 0 0
case=11
input=1 1 1 0 0 0 5
output=5
case=12
input=2 2 1 1 -1 4 5 1 0 6
output=INVALID INPUT
case=13
input=2 2 5 1 0 0 1 0 1 2 1 0 3 1 1 4 0 0 5
output=INVALID INPUT
case=14
input=4 4 6 8 0 0 1 0 2 2 1 1 6 1 3 18 2 0 20 3 0 30 0 0 4 0 2 8 1 0 9 1 1 4 2 3 20 3 0 20 3 2 30 3 3 50
output=5 0 10 0 9 10 0 18 20 0 0 20 50 0 30 50